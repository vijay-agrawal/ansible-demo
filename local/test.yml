- name: config
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    http_port: 80
 # lookup does not work -it expects a vars file as key value pairs with =
 # used only to read ansible variables
    ec2_instances: "{{ lookup('file', 'instances.json') | from_json }}"
    hosts_json: "{{ lookup('file', 'json.data') | from_json }}"
  tasks:
  - debug: var=http_port
  - set_fact:
      rancher_env_hosts: "{{ item.hostname }}"
  #when: item.hostname == "*-i-*"
    with_items: "{{hosts_json.json.data}}"
  - name: output
    debug:
      msg: "hosts: {{rancher_env_hosts}}"
#  - debug: var=ec2_instances
#  - set_fact:
#      ips: "{{ item.public_ip_address }}"
#    with_items: "{{ec2_instances.instances}}"
#  - name: output
#    debug:
#      msg: "ips: {{ips}}"
 
 # - name: Load data
 #   slurp:
 #     src: "{{ '/home/viagrawa/Downloads/ansible-delhi/output.json' }}"
 #   register: ec2_output
#  - debug: var=ec2_instances
  - set_fact: 
      private_dns_names: "{{ ec2_instances.instances | map(attribute='private_dns_name') | list }}"
  - debug:
      msg: "dns names: {{private_dns_names}}"
  - set_fact: 
      ansibleGroups: "{{ ec2_instances.instances | map(attribute='tags.AnsibleGroup') | list }}"
  - debug:
      msg: "ansible groups: {{ansibleGroups}}"
  - set_fact: 
      instance_ids: "{{ ec2_instances.instances | map(attribute='instance_id') | list }}"
  - debug:
      msg: "instance ids: {{instance_ids}}"
  - debug: var=item.0
    with_together:
      - "{{ ec2_instances.instances | map(attribute='tags.AnsibleGroup')| list }}"
      - "{{ ec2_instances.instances | map(attribute='instance_id')| list }}"
   